<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.novel.dao.NAuthorCustomMapper" >
  <sql id="Base_Column_List" >
    a.id, a.authorname, a.password, a.sex, a.email, a.phone, a.address, a.state, a.created, a.updated ,
    b.title as bookname
  </sql>

  <sql id="Where_Clause">
    <where>
      a.state != 3
      <if test="query != null and query.title != null and query.title != ''">
        and a.authorname like '%${query.title}%'
      </if>
      <if test="query != null and query.state != null and query.state != 0">
        and a.state = #{query.state}
      </if>
    </where>
  </sql>

  <select id="countAuthors" resultType="_int">
    select count(1)
    from n_author a
    <include refid="Where_Clause" />
  </select>

  <select id="listAuthorsByPage" resultType="com.qf.novel.pojo.vo.NAuthorCustom">
    SELECT
    <include refid="Base_Column_List" />
    FROM n_author a
    LEFT JOIN n_book b ON a.id=b.aid
    <include refid="Where_Clause" />
    <choose>
      <when test="order != null and order.sort != null and order.order != null and order.orderParams != null">
        <foreach collection="order.orderParams" item="item" open="order by" close="" separator=",">
          a.${item}
        </foreach>
      </when>
      <otherwise>
        ORDER BY a.id ASC
      </otherwise>
    </choose>
    LIMIT #{page.offset},#{page.rows}
  </select>

</mapper>